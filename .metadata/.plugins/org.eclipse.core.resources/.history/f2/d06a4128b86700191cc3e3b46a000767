package pe.com.tintegro.controller;

import javax.annotation.Resource;

import org.apache.log4j.Logger;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import pe.com.tintegro.dao.util.Constantes;
import pe.com.tintegro.dto.request.BuscarDetalleMonitoreoRequest;
import pe.com.tintegro.dto.request.ListaMonitoreoSipRequest;
import pe.com.tintegro.dto.request.ListarMonitoreoRequest;
import pe.com.tintegro.dto.request.MonitoreoDesloguearRequest;
import pe.com.tintegro.dto.request.MonitoreoEspiaRequest;
import pe.com.tintegro.dto.request.MonitoreoPausarRequest;
import pe.com.tintegro.dto.request.MonitoreoSusurroRequest;
import pe.com.tintegro.dto.response.BuscarDetalleMonitoreoResponse;
import pe.com.tintegro.dto.request.BuscarAgentePorColaRequest;
import pe.com.tintegro.dto.response.BuscarAgentePorColaResponse;
import pe.com.tintegro.dto.response.InfoQueueDetailResponse;
import pe.com.tintegro.dto.response.ListaMonitoreoSipResponse;
import pe.com.tintegro.dto.response.MonitoreoDesloguearResponse;
import pe.com.tintegro.dto.response.MonitoreoEspiaResponse;
import pe.com.tintegro.dto.response.MonitoreoPausarResponse;
import pe.com.tintegro.dto.response.MonitoreoSusurroResponse;
import pe.com.tintegro.services.MonitoreoServices;
import pe.com.tintegro.services.util.Util;

@RestController
@RequestMapping("/monitoreo")
public class MonitoreoController {
	protected transient final Logger LOGGER = Logger.getLogger(this.getClass());
	@Resource(name = "monitoreoServices")
	protected MonitoreoServices monitoreoServices;

	// Listar Monitoreo
	@RequestMapping(value = "/lista", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)
	public InfoQueueDetailResponse listarMonitoreo(@RequestBody ListarMonitoreoRequest request, @RequestHeader("codUsuario") String codUsuario, @RequestHeader("token") String token, @RequestHeader("idInstancia") String idInstancia) {
		InfoQueueDetailResponse response = new InfoQueueDetailResponse();
		try {
			response = monitoreoServices.listarMonitoreo(codUsuario,
					idInstancia, request);
			response.setEstado(Constantes.ESTADO_TRAMA_OK);
			response.setMensaje("Se cargo la lista correctamente");
		} catch (Exception ex) {
			response.setEstado(Constantes.ESTADO_TRAMA_ERROR_APP);
			String codError = Constantes.ID_ERROR_APP+ Util.getCodigoErrorByDate();
			response.setCodError(codError);
			response.setMensaje("No ha sido posible cargar la lista");
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}
		return response;
	}

	// Buscar Detalle Monitoreo
	@RequestMapping(value = "/detalle", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)
	public BuscarDetalleMonitoreoResponse detalleMonitoreo( @RequestBody BuscarDetalleMonitoreoRequest request, @RequestHeader("codUsuario") String codUsuario, @RequestHeader("token") String token, @RequestHeader("idInstancia") String idInstancia) {
		BuscarDetalleMonitoreoResponse response = new BuscarDetalleMonitoreoResponse();
		try {
			response = monitoreoServices.detalleMonitoreo(codUsuario,idInstancia, request);
			response.setEstado(Constantes.ESTADO_TRAMA_OK);
			response.setMensaje("Se encontro el detalle");
		} catch (Exception ex) {
			response.setEstado(Constantes.ESTADO_TRAMA_ERROR_APP);
			String codError = Constantes.ID_ERROR_APP+ Util.getCodigoErrorByDate();
			response.setCodError(codError);
			response.setMensaje("No ha sido posible encontrar el detalle");
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}
		return response;
	}

	// Monitoreo Desloguear
	@RequestMapping(value = "/deslogear", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)
	public MonitoreoDesloguearResponse monitoreoDesloguear( @RequestHeader("codUsuario") String codUsuario, @RequestHeader("token") String token,@RequestHeader("idInstancia") String idInstancia, @RequestBody MonitoreoDesloguearRequest request) throws Exception {
		MonitoreoDesloguearResponse response = new MonitoreoDesloguearResponse();
		try {
			response = monitoreoServices.monitoreoDesloguear(codUsuario,idInstancia, request);
			response.setEstado(Constantes.ESTADO_TRAMA_OK);
		} catch (Exception ex) {
			response.setEstado(Constantes.ESTADO_TRAMA_ERROR_APP);
			String codError = Constantes.ID_ERROR_APP+ Util.getCodigoErrorByDate();
			response.setCodError(codError);
			response.setMensaje("No ha sido posible encontrar el detalle");
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}
		return response;
	}

	// Monitoreo Pausar
	@RequestMapping(value = "/pausar", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)
	public MonitoreoPausarResponse monitoreoPausar(@RequestBody MonitoreoPausarRequest request, @RequestHeader("codUsuario") String codUsuario,@RequestHeader("token") String token,@RequestHeader("idInstancia") String idInstancia) throws Exception {
		MonitoreoPausarResponse response = new MonitoreoPausarResponse();
		try { 
			System.out.println("request ::::: " + request.getNuAgente() + "\t" + request.getCola() + "\t" + request.getEstado());
			response = monitoreoServices.monitoreoPausar(codUsuario,idInstancia, request);
			response.setEstado(Constantes.ESTADO_TRAMA_OK);
		} catch (Exception ex) {
			response.setEstado(Constantes.ESTADO_TRAMA_ERROR_APP);
			String codError = Constantes.ID_ERROR_APP+ Util.getCodigoErrorByDate();
			response.setCodError(codError);
			response.setMensaje("No ha sido posible encontrar el detalle");
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}
		return response;
	}

	// Monitoreo Susurro
	@RequestMapping(value = "/susurro", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)
	public MonitoreoSusurroResponse monitoreoSusurro(@RequestHeader("codUsuario") String codUsuario,@RequestHeader("token") String token,@RequestHeader("idInstancia") String idInstancia, @RequestBody MonitoreoSusurroRequest request) throws Exception {
		MonitoreoSusurroResponse response = new MonitoreoSusurroResponse();
		try {
			response = monitoreoServices.monitoreoSusurro(codUsuario,idInstancia, request);
		} catch (Exception exception) {
			System.out.println(exception.getMessage());
		}
		return response;
	}

	// Monitoreo Espia
	@RequestMapping(value = "/espia", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)
	public MonitoreoEspiaResponse monitoreoEspia(@RequestHeader("codUsuario") String codUsuario,@RequestHeader("token") String token,@RequestHeader("idInstancia") String idInstancia, @RequestBody MonitoreoEspiaRequest request) throws Exception {
		MonitoreoEspiaResponse response = new MonitoreoEspiaResponse();
		try {
			response = monitoreoServices.monitoreoEspia(codUsuario,idInstancia, request);
		} catch (Exception exception) {
			System.out.println(exception.getMessage());
		}
		return response;
	}

	@RequestMapping(value = "/busca-agente", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)
	public BuscarAgentePorColaResponse buscarAgentePorCola(@RequestBody BuscarAgentePorColaRequest request,@RequestHeader("codUsuario") String codUsuario,@RequestHeader("token") String token,@RequestHeader("idInstancia") String idInstancia) {
		BuscarAgentePorColaResponse response = new BuscarAgentePorColaResponse();
		try {
			response = monitoreoServices.buscarAgentePorCola(codUsuario,idInstancia, request);
			response.setEstado(Constantes.ESTADO_TRAMA_OK);
			response.setMensaje("Se cargo la lista correctamente");
		} catch (Exception ex) {
			response.setMensaje("No ha sido posible mostrar los nombres de los agentes");
			response.setEstado(Constantes.ESTADO_TRAMA_ERROR_APP);
			String codError = Constantes.ID_ERROR_APP+ Util.getCodigoErrorByDate();
			response.setCodError(codError);
			LOGGER.error(codError, ex);
		}

		return response;
	}
	
	@RequestMapping(value = "/listaSip", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)
	public ListaMonitoreoSipResponse listarMonitoreoSip(@RequestBody ListaMonitoreoSipRequest request, @RequestHeader("codUsuario") String codUsuario, @RequestHeader("token") String token, @RequestHeader("idInstancia") String idInstancia) {
		ListaMonitoreoSipResponse response = new ListaMonitoreoSipResponse();
		try {
			response = monitoreoServices.listarMonitoreoSip(codUsuario,
					idInstancia, request);
			response.setEstado(Constantes.ESTADO_TRAMA_OK);
			response.setMensaje("Se cargo la lista sip correctamente");
		} catch (Exception ex) {
			response.setEstado(Constantes.ESTADO_TRAMA_ERROR_APP);
			String codError = Constantes.ID_ERROR_APP+ Util.getCodigoErrorByDate();
			response.setCodError(codError);
			response.setMensaje("No ha sido posible cargar la lista sip");
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}
		return response;
	}	
}
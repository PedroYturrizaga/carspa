package pe.com.carspa.controller;

import java.awt.PageAttributes.MediaType;
import java.util.logging.Logger;

import javax.annotation.Resource;
import javax.rmi.CORBA.Util;

import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import pe.com.carspa.dao.util.Constantes;
import pe.com.carspa.dto.request.ActualizarAgentexColaRequest;
import pe.com.carspa.dto.request.EliminarAgentexColaRequest;
import pe.com.carspa.dto.request.InsertarAgentexColaRequest;
import pe.com.carspa.dto.request.ListarAgentexColaRequest;
import pe.com.carspa.dto.request.ListarColaAgenteRequest;
import pe.com.carspa.dto.request.ListarFormatoGrabacionEstrategiaRequest;
import pe.com.carspa.dto.response.ActualizarAgentexColaResponse;
import pe.com.carspa.dto.response.EliminarAgentexColaResponse;
import pe.com.carspa.dto.response.InsertarAgentexColaResponse;
import pe.com.carspa.dto.response.ListarAgentexColaResponse;
import pe.com.carspa.dto.response.ListarFormatoGrabacionEstrategiaResponse;
import pe.com.carspa.services.AgenteColaServices;

@RestController
@RequestMapping("/agentecola")
public class AgenteColaController
{
	protected transient final Logger LOGGER = Logger.getLogger(this.getClass());
	@Resource(name = "agenteColaServices")
	protected AgenteColaServices agenteColaServices;	

	
	@RequestMapping(value = "/insertar", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)	
	public InsertarAgentexColaResponse insertarAgentePorCola(@RequestHeader("codUsuario") String codUsuario, @RequestHeader("token") String token, @RequestHeader("idInstancia") String idInstancia,
			@RequestBody InsertarAgentexColaRequest request){
		
		InsertarAgentexColaResponse response =new InsertarAgentexColaResponse();
		try
		{
			response = agenteColaServices.insertarAgenteCola(codUsuario, idInstancia, request);
			response.setInsertado(response.getInsertado());
		}
		catch (Exception ex)
		{
			response.setEstado(Constantes.ESTADO_TRAMA_ERROR_APP);
			String codError = Constantes.ID_ERROR_APP + Util.getCodigoErrorByDate();
			response.setCodError(codError);
			response.setMensaje("No se ha podido asignar agente a cola");
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}		
		return response;
	}
	
	@RequestMapping(value = "/listar", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)	
	public ListarAgentexColaResponse listarAgentePorCola(@RequestHeader("codUsuario") String codUsuario, @RequestHeader("token") String token, @RequestHeader("idInstancia") String idInstancia,
			@RequestBody ListarAgentexColaRequest request){
		
		ListarAgentexColaResponse response =new ListarAgentexColaResponse();
		try
		{
			response = agenteColaServices.listarAgenteCola(codUsuario, idInstancia,request);
			response.setEstado(Constantes.ESTADO_TRAMA_OK);
			response.setMensaje("Consulta de Asignacion Realizada");
		}
		catch (Exception ex)
		{
			response.setEstado(Constantes.ESTADO_TRAMA_ERROR_APP);
			String codError = Constantes.ID_ERROR_APP + Util.getCodigoErrorByDate();
			response.setCodError(codError);
			response.setMensaje("No se ha podido lista Asignación");
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}		
		return response;
	}	
	
	@RequestMapping(value = "/actualizar", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)	
	public ActualizarAgentexColaResponse actualizarAgentePorCola(@RequestHeader("codUsuario") String codUsuario, @RequestHeader("token") String token, @RequestHeader("idInstancia") String idInstancia,
			@RequestBody ActualizarAgentexColaRequest request){
		
		ActualizarAgentexColaResponse response =new ActualizarAgentexColaResponse();
		try
		{
			response = agenteColaServices.actualizarAgenteCola(codUsuario, idInstancia, request);
			response.setActualizado(response.getActualizado());
		}
		catch (Exception ex)
		{
			response.setEstado(Constantes.ESTADO_TRAMA_ERROR_APP);
			String codError = Constantes.ID_ERROR_APP + Util.getCodigoErrorByDate();
			response.setCodError(codError);
			response.setMensaje("No se ha podido actualizar la asignacion de agente a cola");
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}		
		return response;
	}	
	
	@RequestMapping(value = "/eliminar", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)	
	public EliminarAgentexColaResponse actualizarAgentePorCola(@RequestHeader("codUsuario") String codUsuario, @RequestHeader("token") String token, @RequestHeader("idInstancia") String idInstancia,
			@RequestBody EliminarAgentexColaRequest request){
		
		EliminarAgentexColaResponse response =new EliminarAgentexColaResponse();
		try
		{
			response = agenteColaServices.eliminarAgenteCola(codUsuario, idInstancia, request);
			response.setEliminado(response.getEliminado());
		}
		catch (Exception ex)
		{
			response.setEstado(Constantes.ESTADO_TRAMA_ERROR_APP);
			String codError = Constantes.ID_ERROR_APP + Util.getCodigoErrorByDate();
			response.setCodError(codError);
			response.setMensaje("No se ha podido eliminar la asignacion de agente a cola");
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}		
		return response;
	}		
	
	@RequestMapping(value = "/listarColasAgente", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)	
	public ListarAgentexColaResponse listarColaPorAgente(@RequestHeader("codUsuario") String codUsuario, @RequestHeader("token") String token, @RequestHeader("idInstancia") String idInstancia,
			@RequestBody ListarColaAgenteRequest request){
		
		ListarAgentexColaResponse response =new ListarAgentexColaResponse();
		try
		{
			response = agenteColaServices.listarColaAgente(codUsuario, idInstancia,request);
			response.setEstado(Constantes.ESTADO_TRAMA_OK);
			response.setMensaje("Consulta de Asignacion Realizada");
		}
		catch (Exception ex)
		{
			response.setEstado(Constantes.ESTADO_TRAMA_ERROR_APP);
			String codError = Constantes.ID_ERROR_APP + Util.getCodigoErrorByDate();
			response.setCodError(codError);
			response.setMensaje("No se ha podido listar Asignación");
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}		
		return response;
	}	
	@RequestMapping(value = "/listarFormatoGrabacion", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)	
	public ListarFormatoGrabacionEstrategiaResponse listarFormatoGrabacion(@RequestHeader("codUsuario") String codUsuario, @RequestHeader("token") String token, @RequestHeader("idInstancia") String idInstancia,
			@RequestBody ListarFormatoGrabacionEstrategiaRequest request){
		
		ListarFormatoGrabacionEstrategiaResponse response =new ListarFormatoGrabacionEstrategiaResponse();
		try
		{
			response = agenteColaServices.listarFormatoGrabacion(codUsuario, idInstancia,request);
			response.setEstado(Constantes.ESTADO_TRAMA_OK);
			response.setMensaje("Consulta de formatos realizada");
		}
		catch (Exception ex)
		{
			response.setEstado(Constantes.ESTADO_TRAMA_ERROR_APP);
			String codError = Constantes.ID_ERROR_APP + Util.getCodigoErrorByDate();
			response.setCodError(codError);
			response.setMensaje("No se ha podido listar");
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}		
		return response;
	}
	@RequestMapping(value = "/listarEstrategia", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)	
	public ListarFormatoGrabacionEstrategiaResponse listarEstrategia(@RequestHeader("codUsuario") String codUsuario, @RequestHeader("token") String token, @RequestHeader("idInstancia") String idInstancia,
			@RequestBody ListarFormatoGrabacionEstrategiaRequest request){
		
		ListarFormatoGrabacionEstrategiaResponse response =new ListarFormatoGrabacionEstrategiaResponse();
		try
		{
			response = agenteColaServices.listarEstrategia(codUsuario, idInstancia,request);
			response.setEstado(Constantes.ESTADO_TRAMA_OK);
			response.setMensaje("Consulta de formatos realizada");
		}
		catch (Exception ex)
		{
			response.setEstado(Constantes.ESTADO_TRAMA_ERROR_APP);
			String codError = Constantes.ID_ERROR_APP + Util.getCodigoErrorByDate();
			response.setCodError(codError);
			response.setMensaje("No se ha podido listar");
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}		
		return response;
	}
		
}

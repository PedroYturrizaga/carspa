package pe.com.tintegro.controller;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import pe.com.tintegro.dto.request.InsertaTipTelClaveRequest;
import pe.com.tintegro.dto.request.ListaTipTelClaveRequest;
import pe.com.tintegro.dto.response.InsertaTipTelClaveResponse;
import pe.com.tintegro.dto.response.ListaTipTelClaveResponse;
import pe.com.tintegro.services.TipTelClaveServices;
import pe.com.tintegro.dao.util.Constantes;
import pe.com.tintegro.services.util.Util;

import org.apache.log4j.Logger;

@RestController
@RequestMapping("/tipTelClave")
public class TipTelClaveController
{
	protected transient final Logger LOGGER = Logger.getLogger(this.getClass());

	@Resource(name = "tipTelClaveServices")
	protected TipTelClaveServices tipTelClaveServices;

	@RequestMapping(value = "/listar", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)
	public ListaTipTelClaveResponse listar(@RequestBody ListaTipTelClaveRequest request, @RequestHeader("codUsuario") String codUsuario, @RequestHeader("token") String token,
			@RequestHeader("idInstancia") String idInstancia)
	{
		ListaTipTelClaveResponse response = new ListaTipTelClaveResponse();

		try
		{
			response = tipTelClaveServices.listarTipTelClave(codUsuario, idInstancia);
			response.setEstado(Constantes.ESTADO_TRAMA_OK);
			response.setMensaje("Consulta de Telefonos Clave Realizada");
		}
		catch (Exception ex)
		{
			response.setEstado(Constantes.ESTADO_TRAMA_ERROR_APP);
			String codError = Constantes.ID_ERROR_APP + Util.getCodigoErrorByDate();
			response.setCodError(codError);
			response.setMensaje("No ha sido posible mostrar los Telefono Claves");
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}

		return response;
	}

	@RequestMapping(value = "/insertar", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)
	public InsertaTipTelClaveResponse insertarTipTelClave(@RequestBody InsertaTipTelClaveRequest request, @RequestHeader("codUsuario") String codUsuario, @RequestHeader("token") String token,
			@RequestHeader("idInstancia") String idInstancia)

	{
		InsertaTipTelClaveResponse response = new InsertaTipTelClaveResponse();
		try
		{
			response = tipTelClaveServices.insertarTipTelClave(codUsuario, idInstancia, request);
		}
		catch (Exception exception)
		{
			response.setEstado(Constantes.ESTADO_TRAMA_ERROR_APP);
			String codError = Constantes.ID_ERROR_APP + Util.getCodigoErrorByDate();
			response.setCodError(codError);
			response.setMensaje("No ha sido posible insertar los Telefono Claves");
			System.out.println(exception.getMessage());
			LOGGER.error(codError, exception);
		}

		return response;
	}
}

package pe.com.tintegro.controller;

import javax.annotation.Resource;

import org.apache.log4j.Logger;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import pe.com.tintegro.dao.util.Constantes;


import pe.com.tintegro.dto.request.ActualizarServidorAdminRequest;
import pe.com.tintegro.dto.request.EliminarServidorAdminRequest;
import pe.com.tintegro.dto.request.InsertarServidorAdminRequest;
import pe.com.tintegro.dto.request.ListarServidorAdminRequest;
import pe.com.tintegro.dto.response.CRUDResponse;
import pe.com.tintegro.dto.response.ListarServidorAdminResponse;
import pe.com.tintegro.services.ServidorAdminServices;
import pe.com.tintegro.services.util.Util;


@RestController
@RequestMapping("/servidorAdmin")
public class ServidorAdminController {
	protected transient final Logger LOGGER = Logger.getLogger(this.getClass());
	@Resource(name = "servidorAdminServices")
	protected ServidorAdminServices servidorAdminServices;
	
	@RequestMapping(value = "/listar", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)
	public ListarServidorAdminResponse listarSerAdmin(@RequestHeader("codUsuario") String codUsuario,
			@RequestHeader("token") String token,
			@RequestBody ListarServidorAdminRequest request) {

		ListarServidorAdminResponse response = new ListarServidorAdminResponse();
		try {
			response = servidorAdminServices.listarSerAdmin(request);
			response.setEstado(Constantes.ESTADO_TRAMA_OK);
			response.setMensaje("ServidoresAdm obtenidos correctamente");
			

		} catch (Exception ex) {
			String codError = Constantes.ID_ERROR_APP + Util.getCodigoErrorByDate();
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}
		return response;
	}
	@RequestMapping(value = "/eliminar", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)
	public CRUDResponse eliminarServidorAdmin(@RequestHeader("codUsuario") String codUsuario,
			@RequestHeader("token") String token,
			@RequestBody EliminarServidorAdminRequest request) {
		CRUDResponse response = new CRUDResponse();
		try {
			response = servidorAdminServices.eliminarServidorAdmin(request);
		} catch (Exception ex) {
			String codError = Constantes.ID_ERROR_APP + Util.getCodigoErrorByDate();
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}
		return response;
	}
	@RequestMapping(value = "/insertar", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)
	public CRUDResponse insertarServidorAdmin(@RequestHeader("codUsuario") String codUsuario,
			@RequestHeader("token") String token,
			@RequestBody InsertarServidorAdminRequest request) {
		CRUDResponse response = new CRUDResponse();
		try {
			response = servidorAdminServices.insertarServidorAdmin(request);
		} catch (Exception ex) {
			String codError = Constantes.ID_ERROR_APP + Util.getCodigoErrorByDate();
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}
		return response;
	}
	@RequestMapping(value = "/actualizar", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)
	public CRUDResponse actualizarServidorAdmin(@RequestHeader("codUsuario") String codUsuario,
			@RequestHeader("token") String token,
			@RequestBody ActualizarServidorAdminRequest request) {
		CRUDResponse response = new CRUDResponse();
		try {
			response = servidorAdminServices.actualizarServidorAdmin(request);
		} catch (Exception ex) {
			String codError = Constantes.ID_ERROR_APP + Util.getCodigoErrorByDate();
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}
		return response;
	}

}

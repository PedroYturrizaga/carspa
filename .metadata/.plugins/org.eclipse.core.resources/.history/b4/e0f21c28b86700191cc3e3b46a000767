package pe.com.tintegro.controller;

import javax.annotation.Resource;

import org.apache.log4j.Logger;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import pe.com.tintegro.dao.util.Constantes;
import pe.com.tintegro.dto.request.CargaExcelPermisoLlamadasRequest;
import pe.com.tintegro.dto.request.ListaTbUsuarioRequest;
import pe.com.tintegro.dto.response.InsertarUsuarioResponse;
import pe.com.tintegro.dto.response.ListaTbUsuarioResponse;
import pe.com.tintegro.services.CargaExcelPermisoLlamadasServices;
import pe.com.tintegro.services.CargaExcelPermisosUsuarioServices;
import pe.com.tintegro.services.util.Util;

@RestController
@RequestMapping("/excelPermisosUsuario")
public class CargaExcelPermisosUsuarioController
{
	protected transient final Logger LOGGER = Logger.getLogger(this.getClass());

	@Resource(name = "cargaExcelPermisosUsuarioServices")
	protected CargaExcelPermisosUsuarioServices cargaExcelPermisosUsuarioServices;

	@Resource(name = "cargaExcelPermisoLlamadasServices")
	protected CargaExcelPermisoLlamadasServices cargaExcelPermisoLlamadasServices;

	@RequestMapping(value = "/descarga", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)
	public ListaTbUsuarioResponse listaTbUsuarioResponse(@RequestBody ListaTbUsuarioRequest request, @RequestHeader("codUsuario") String codUsuario, @RequestHeader("token") String token,
			@RequestHeader("idInstancia") String idInstancia)
	{
		ListaTbUsuarioResponse response = new ListaTbUsuarioResponse();
		try
		{
			response = cargaExcelPermisosUsuarioServices.DescargaExcelPermisosUsuario(codUsuario, idInstancia, request);
			response.setEstado(Constantes.ESTADO_TRAMA_OK);
			response.setMensaje("Se cargo exitosamente");
		}
		catch (Exception ex)
		{
			response.setEstado(Constantes.ESTADO_TRAMA_ERROR_APP);
			String codError = Constantes.ID_ERROR_APP + Util.getCodigoErrorByDate();
			response.setCodError(codError);
			response.setMensaje("Error en carga");
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}
		return response;
	}

	@RequestMapping(value = "/carga", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)
	public InsertarUsuarioResponse insertaUsuarioResponse(@RequestBody CargaExcelPermisoLlamadasRequest request, @RequestHeader("codUsuario") String codUsuario, @RequestHeader("token") String token,
			@RequestHeader("idInstancia") String idInstancia)
	{
		InsertarUsuarioResponse response = new InsertarUsuarioResponse();
		try
		{
			response = cargaExcelPermisoLlamadasServices.SubirExcelPermisoLlamadas(codUsuario, idInstancia, request);
//			response.setEstado(Constantes.ESTADO_TRAMA_OK);
			response.setMensaje("Se cargo Exitosamente");
		}
		catch (Exception ex)
		{
			response.setEstado(Constantes.ESTADO_TRAMA_ERROR_APP);
			String codError = Constantes.ID_ERROR_APP + Util.getCodigoErrorByDate();
			response.setCodError(codError);
			response.setMensaje("Error en carga");
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}
		return response;
	}
}

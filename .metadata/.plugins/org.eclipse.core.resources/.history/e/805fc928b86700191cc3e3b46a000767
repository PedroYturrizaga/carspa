package pe.com.tintegro.controller;

import javax.annotation.Resource;

import org.apache.log4j.Logger;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import pe.com.tintegro.dao.util.Constantes;
import pe.com.tintegro.dto.request.ActualizarConfMonitorColaRequest;
import pe.com.tintegro.dto.request.EliminarConfMonitorColaRequest;
import pe.com.tintegro.dto.request.InsertarConfMonitorColaRequest;
import pe.com.tintegro.dto.request.ListarConfMonitorColaRequest;
import pe.com.tintegro.dto.response.ActualizarConfMonitorColaResponse;
import pe.com.tintegro.dto.response.EliminarConfMonitorColaResponse;
import pe.com.tintegro.dto.response.InsertarConfMonitorColaResponse;
import pe.com.tintegro.dto.response.ListarConfMonitorColaResponse;
import pe.com.tintegro.services.ConfMonitorColaServices;
import pe.com.tintegro.services.util.Util;

@RestController
@RequestMapping("/confMonitorCola")
public class ConfMonitorColaController
{
	protected transient final Logger LOGGER = Logger.getLogger(this.getClass());
	@Resource(name = "confMonitorColaServices")
	protected ConfMonitorColaServices confMonitorColaServices;	
	
	@RequestMapping(value = "/insertar", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)	
	public InsertarConfMonitorColaResponse insertarConfMonitorCola(@RequestHeader("codUsuario") String codUsuario, @RequestHeader("token") String token, @RequestHeader("idInstancia") String idInstancia,
			@RequestBody InsertarConfMonitorColaRequest request){
		
		InsertarConfMonitorColaResponse response =new InsertarConfMonitorColaResponse();
		try
		{
			response = confMonitorColaServices.insertarConfMonitorCola(codUsuario, idInstancia, request);
			response.setInsertado(response.getInsertado());
		}
		catch (Exception ex)
		{
			response.setEstado(Constantes.ESTADO_TRAMA_ERROR_APP);
			String codError = Constantes.ID_ERROR_APP + Util.getCodigoErrorByDate();
			response.setCodError(codError);
			response.setMensaje("No se ha podido agregar Monitoreo");
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}		
		return response;
	}	
	
	@RequestMapping(value = "/listar", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)	
	public ListarConfMonitorColaResponse listarConfMonitorCola(@RequestHeader("codUsuario") String codUsuario, @RequestHeader("token") String token, @RequestHeader("idInstancia") String idInstancia,
			@RequestBody ListarConfMonitorColaRequest request){
		
		ListarConfMonitorColaResponse response =new ListarConfMonitorColaResponse();
		try
		{
			response = confMonitorColaServices.listarConfMonitorCola(codUsuario, idInstancia,request);
			response.setEstado(Constantes.ESTADO_TRAMA_OK);
			response.setMensaje("Consulta de Monitoreo de Colas exitosa");
		}
		catch (Exception ex)
		{
			response.setEstado(Constantes.ESTADO_TRAMA_ERROR_APP);
			String codError = Constantes.ID_ERROR_APP + Util.getCodigoErrorByDate();
			response.setCodError(codError);
			response.setMensaje("No se ha podido Consultar Monitoreo de Colas");
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}		
		return response;
	}	
	
	@RequestMapping(value = "/actualizar", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)	
	public ActualizarConfMonitorColaResponse actualizarConfMonitorCola(@RequestHeader("codUsuario") String codUsuario, @RequestHeader("token") String token, @RequestHeader("idInstancia") String idInstancia,
			@RequestBody ActualizarConfMonitorColaRequest request){
		
		ActualizarConfMonitorColaResponse response =new ActualizarConfMonitorColaResponse();
		try
		{
			response = confMonitorColaServices.actualizarConfMonitorCola(codUsuario, idInstancia, request);
			response.setActualizado(response.getActualizado());
		}
		catch (Exception ex)
		{
			response.setEstado(Constantes.ESTADO_TRAMA_ERROR_APP);
			String codError = Constantes.ID_ERROR_APP + Util.getCodigoErrorByDate();
			response.setCodError(codError);
			response.setMensaje("No se ha podido actualizar Monitoreo de Cola");
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}		
		return response;
	}	
	
	@RequestMapping(value = "/eliminar", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseStatus(value = HttpStatus.OK)	
	public EliminarConfMonitorColaResponse eliminarConfMonitorCola(@RequestHeader("codUsuario") String codUsuario, @RequestHeader("token") String token, @RequestHeader("idInstancia") String idInstancia,
			@RequestBody EliminarConfMonitorColaRequest request){
		
		EliminarConfMonitorColaResponse response =new EliminarConfMonitorColaResponse();
		try
		{
			response = confMonitorColaServices.eliminarConfMonitorCola(codUsuario, idInstancia, request);
			response.setEliminado(response.getEliminado());
		}
		catch (Exception ex)
		{
			response.setEstado(Constantes.ESTADO_TRAMA_ERROR_APP);
			String codError = Constantes.ID_ERROR_APP + Util.getCodigoErrorByDate();
			response.setCodError(codError);
			response.setMensaje("No se ha podido eliminar Monitoreo de Cola");
			System.out.println(ex.getMessage());
			LOGGER.error(codError, ex);
		}		
		return response;
	}		
}
